import { IUnits } from "./helpers/conversions";
export interface IRecipeResult {
    result?: {
        instruction: string;
        unit: number;
        amount: string;
        ingredient: string;
    };
    unknown: {
        instruction?: string;
        reasons?: UNKNOWN_REASONS[];
    };
}
export declare enum LOGIC_OPERATOR {
    AND = "AND",
    OR = "OR"
}
export declare enum UNKNOWN_REASONS {
    PARSING = "mismatch during parsing",
    PARSING_AMOUNT = "unknown amount",
    PARSING_UNIT = "unknown unit",
    NO_ENTRY = "unavailable ingredient"
}
export interface IInputIngredient {
    recipeStr?: string;
    label?: string;
    quantity?: number;
}
export default class RecipesParser {
    private rules;
    private units;
    private globalUnit;
    private nlpParser;
    private conversionsUtils;
    constructor(rules: string, units: IUnits, globalUnit: any);
    getIngredientsFromText(recipeInstructions: string[], returnUnitKey?: boolean): IRecipeResult[];
}
